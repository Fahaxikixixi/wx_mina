<!--pages/demo_components/components.wxml-->
<!-- 
    1 父组件（相当于是当前页面文件） 向子组件 传递数据  通过  标签属性的方式来传递
        1.1 在子组件上进行接收
        1.2 把这个数据当成是data中的数据直接用即可(父组件(当前页面文件)传递的数据在子组件才能获得)
            例： <view>{{aaa}}</view>  ==>输出 a123a  子组件内调用了该数据  父组件也会显示该数据
    2 子向父传递数据  通过事件的方式传递
        2.1 在子组件的标签上加入一个 自定义事件
 -->

 <!-- 这里就是相当于父组件（当前页面文件）向子组件传递了一个数据==>  属性名是 aaa  属性值是 123 -->

<view>
    组件使用+父组件向子组件传递数据初体验
</view>
  
<Tabs aaa="a123a"></Tabs>

<view>----------------分割线---------------------</view>
<view>
    组件使用+父组件向子组件传递数据应用
</view>

<Tabs_father_son tabs="{{tabs}}" binditemChange="handleItemChange">
    <block wx:if="{{tabs[0].isActive}}">0</block>
    <block wx:elif="{{tabs[1].isActive}}">1</block>
    <block wx:elif="{{tabs[2].isActive}}">2</block>
    <block wx:else="{{tabs[3].isActive}}">3</block>
<!-- <view wx:else>3</view>  这个写法也可以 -->

</Tabs_father_son>



